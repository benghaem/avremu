#include "memory.h"
#include <stdint.h>

#ifndef INSTRUCTION_H
#define INSTRUCTION_H

enum instruction{
    ADD,
    ADIW,
    AND,
    ANDI,
    ASR,
    BCLR,
    BLD,
    BRBC,
    BRBS,
    BREAK,
    BSET,
    BST,
    CALL,
    CBI,
    COM,
    CP,
    CPC,
    CPI,
    CPSE,
    DEC,
    DES,
    EICALL,
    EIJMP,
    ELPM1,
    ELPM2,
    ELPM3,
    EOR,
    FMUL,
    FMULS,
    FMULSU,
    ICALL,
    IJMP,
    IN,
    INC,
    JMP,
    LAC,
    LAS,
    LAT,
    LDD_Y,
    LDD_Z,
    LDI,
    LDS,
    LD_X,
    LD_Xm,
    LD_Xp,
    LD_Ym,
    LD_Yp,
    LD_Zm,
    LD_Zp,
    LPM,
    LPM_Z,
    LPM_Zp,
    LSR,
    MOV,
    MOVW,
    MUL,
    MULSU,
    NEG,
    NOP,
    OR,
    ORI,
    OUT,
    POP,
    PUSH,
    RCALL,
    RET,
    RETI,
    RJMP,
    ROL,
    ROR,
    SBC,
    SBCI,
    SBI,
    SBIC,
    SBIS,
    SBIW,
    SBRC,
    SBRS,
    SLEEP,
    SPM,
    SPM2_Z,
    STD_Y,
    STD_Z,
    STS,
    ST_X,
    ST_Xm,
    ST_Xp,
    ST_Ym,
    ST_Yp,
    ST_Zm,
    ST_Zp,
    SUB,
    SUBI,
    SWAP,
    WDR,
    XCH,
    UNKNOWN
};

enum instruction instruction_decode_bytes(uint16_t bytes);

int instruction_is_32b(enum instruction instr);

char* instruction_str(enum instruction instr);

#endif /* instruction.h */
